{"name":"React-skeleton","tagline":"React UI framework built with the Skeleton responsive css boilerplate. ","body":"# [react-skeleton](http://lightsinthesky.github.io/react-skeleton/)\r\n\r\nreact-skeleton is a React UI framework built with the [Skeleton](http://getskeleton.com) responsive css boilerplate. \r\n\r\n## Installation\r\n\r\nreact-skeleton is available as an [npm package](https://www.npmjs.com/package/react-skeleton)\r\n\r\n```sh\r\nnpm install react-skeleton\r\n```\r\n\r\n## Usage\r\n\r\nAfter you've included react-skeleton in your project you can use the components and style implementation like this:\r\n\r\n```js\r\nvar React = require('react');\r\nvar Button    = require('react-skeleton').Button;\r\n\r\nvar Page = React.createClass({\r\n\r\n  render: function() {\r\n    return (\r\n    \t<Button>Default Button</Button>\r\n\t\t<Button primary={true}>Primary Button</Button>\r\n    );\r\n  }\r\n\r\n});\r\n\r\nmodule.exports = Page;\r\n```\r\n\r\nor include the whole framework like this (and use namespaced components):\r\n\r\n```js\r\nvar React = require('react');\r\nvar Skelton = require('react-skeleton');\r\n\r\nvar Page = React.createClass({\r\n\r\n  render: function() {\r\n    return (\r\n    \t<Skelton.Button>Default Button</Skelton.Button>\r\n    );\r\n  }\r\n\r\n});\r\n\r\nmodule.exports = Page;\r\n```\r\n\r\n## Styles\r\n\r\nStyles are a proof of concept based on Christopher Chedeau's [@vjeux](https://twitter.com/vjeux) [talk](https://speakerdeck.com/vjeux/react-css-in-js) at NationJS.\r\n\r\nexample : \r\n\r\n```js\r\n'use strict';\r\n\r\nvar util = require('../utils');\r\nvar Variables = require('./variables');\r\n\r\nmodule.exports = function(isHovered, custom) {\r\n\tvar base = {\r\n\t\tcolor: '#1EAEDB',\r\n\t\tbackgroundColor: 'transparent'\r\n\t}\r\n\r\n\tvar hover = {\r\n\t\tcolor:'#0FA0CE'\r\n\t}\r\n\treturn util.m(base, isHovered ? hover : {}, custom ? custom : {});\r\n}\r\n```\r\n\r\nAllows a composition of styles as well as simple customization with the custom parameter which is props.style\r\n\r\n```js\r\n\r\ngetInitialState: function() {\r\n\treturn {\r\n\t\thover:false \r\n\t};\r\n},\r\n\r\ntoggleHover: function(e) {\r\n\tthis.setState({hover:!this.state.hover});\r\n},\r\n\r\nrender: function() {\r\n\tvar jss = Styles.Button(this.props.primary, this.state.hover, this.props.style);\r\n\treturn (\r\n\t\t<button style={jss} onMouseOver={this.toggleHover} onMouseOut={this.toggleHover}>{this.props.children}</button>\r\n\t);\r\n}\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}